parameters:
  vulnerabilities_as_json: ''
  issue_type: ''
  project_name: ''
  organization: ''
  authentication_token: ''
  
steps:
- task: CmdLine@2
  inputs:
    script: |
      sca_json='${{ parameters.vulnerabilities_as_json }}'
      for encodedVulnerability in $(echo "${sca_json}" | jq -r '.[] | @base64'); do
        vulnerabilityAsJson=$(echo "$encodedVulnerability" | base64 --decode)
        
        title=$( jq -r  '.title' <<< "${vulnerabilityAsJson}" ) 
        overview=$( jq -r  '.overview' <<< "${vulnerabilityAsJson}" ) 
        cve=$( jq -c  '.cve' <<< "${vulnerabilityAsJson}" ) 
        link=$( jq -c  '._links.html' <<< "${vulnerabilityAsJson}" ) 
        
        ticketTitle="Veracode SCA - $title"
        description="<ul><li>Overview: $overview</li><li>CVE: $cve</li><li><a href=$link>Veracode Database Link</a></li></ul>"
        
        $authentication = ConvertTo-SecureString -String "$authentication_token" -AsPlainText -Force
        $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "anything", $authentication
        
        $Url = "https://dev.azure.com/${{ parameters.organization }}/${{ parameters.project_name }}/_apis/wit/workitems/$${{ parameters.issue_type }}?api-version=6.0"
        $Body = @[{
          "op": "add",
          "path": "/fields/System.Title",
          "from": null,
          "value": "$ticketTitle"
        },
        {
          "op": "add",
          "path": "/fields/System.Description",
          "from": null,
          "value": "$description"
        }]
        Invoke-RestMethod -Method 'Post' -Uri $url -Credential $Credential -Body $body
        echo --------------------------
        echo ""
      done
