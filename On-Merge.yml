# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - develop

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  persistCredentials: true
  clean: true

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CmdLine@2
  name: SCAScan
  env:
    SRCCLR_API_TOKEN: $(SCA_TOKEN)
  inputs:
    script: 'curl -sSL  https://download.sourceclear.com/ci.sh | SRCCLR_CI_JSON=1 sh > sca_output.json || true'

- task: CmdLine@2
  name: CleanDirectory
  inputs:
    script: |
      git stash
      git checkout develop

- task: CmdLine@2
  name: GenerateBaselineFile
  env:
    VID: $(VERACODE_ID)
    VKEY: $(VERACODE_KEY)
  inputs:
    script: |
      curl -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip pipeline-scan-LATEST.zip pipeline-scan.jar
      java -jar pipeline-scan.jar --veracode_api_id "${VID}" --veracode_api_key "${VKEY}" --file ./target/verademo.war --project_name "Verademo ADO" --json_output_file "pipeline_baseline.json" --fail_on_severity "" --issue_details "true" --verbose "true"

- task: CmdLine@2
  name: CommitBaseline
  inputs:
    script: |      
      git config --global user.email "ricardoapjunior@hotmail.com"
      git config --global user.name "cadonuno"
      git add pipeline_baseline.json
      git commit -m "Updating baseline file from Azure [skip ci]"
      git push

- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode Analysis Center'
    veracodeAppProfile: 'Verademo ADO'
    version: 'Post-merge Scan: $(build.buildNumber)'
    filepath: './target/verademo.war'
    sandboxName: 'Release Candidate'
    failBuildIfUploadAndScanBuildStepFails: true
    importResults: true
    maximumWaitTime: '360'

- task: Veracode Flaw Importer@3
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode Analysis Center'
    veracodeAppProfile: 'Verademo ADO'
    sandboxName: 'Release Candidate'
    scanType: 'Dynamic and Static Analysis'
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Task'
    area: '$(system.teamProject)'
    overwriteAreaPathInWorkItemsOnImport: true
    flawImportLimit: '1000'
